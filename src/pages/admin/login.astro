---
import { isAuthenticated } from '../../utils/auth';

// Redirect to admin dashboard if already logged in
const user = isAuthenticated(Astro.request);
if (user) {
  return Astro.redirect('/admin');
}

// Check if there's an error message from a failed login attempt
const errorMessage = Astro.url.searchParams.get('error');
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <title>Admin Login | Bentwood Creek HOA</title>
  </head>
  <body class="bg-gray-100 min-h-screen flex items-center justify-center">
    <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
      <div class="text-center mb-8">
        <h1 class="text-2xl font-bold text-primary">Bentwood Creek HOA</h1>
        <p class="text-gray-600">Admin Login</p>
      </div>
      
      {errorMessage && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
          {errorMessage}
        </div>
      )}
      
      <div id="loginError" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4 hidden">
        Invalid username or password
      </div>
      
      <form id="loginForm" class="space-y-6">
        <div>
          <label for="username" class="block text-sm font-medium text-gray-700 mb-1">Username</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            required 
            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
          />
        </div>
        
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            required 
            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-primary focus:border-primary"
          />
        </div>
        
        <div>
          <button 
            type="submit" 
            id="loginButton"
            class="w-full px-4 py-2 bg-primary text-white font-medium rounded-md hover:bg-primary-dark transition"
          >
            Login
          </button>
        </div>
      </form>
      
      <div class="mt-6 text-center">
        <a href="/" class="text-sm text-primary hover:underline">Return to Homepage</a>
      </div>
    </div>
    
    <script>
      // Handle form submission with fetch API
      document.getElementById('loginForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Hide any previous error messages
        document.getElementById('loginError').classList.add('hidden');
        
        // Disable the login button to prevent multiple submissions
        const loginButton = document.getElementById('loginButton');
        loginButton.disabled = true;
        loginButton.textContent = 'Logging in...';
        
        const username = document.getElementById('username').value.trim();
        const password = document.getElementById('password').value.trim();
        
        // Validate input
        if (!username || !password) {
          const errorEl = document.getElementById('loginError');
          errorEl.textContent = 'Username and password are required';
          errorEl.classList.remove('hidden');
          loginButton.disabled = false;
          loginButton.textContent = 'Login';
          return;
        }
        
        try {
          console.log('Sending login request...');
          const response = await fetch('/api/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username, password })
          });
          
          console.log('Response received, status:', response.status);
          
          let data;
          try {
            const text = await response.text();
            console.log('Response text:', text);
            data = text ? JSON.parse(text) : {};
          } catch (error) {
            console.error('Error parsing response:', error);
            throw new Error('Invalid server response');
          }
          
          if (response.ok && data.success) {
            // Successful login - redirect to admin dashboard
            console.log('Login successful, redirecting...');
            window.location.href = '/admin';
          } else {
            // Show error message
            console.error('Login failed:', data.message);
            const errorEl = document.getElementById('loginError');
            errorEl.textContent = data.message || 'Invalid username or password';
            errorEl.classList.remove('hidden');
            loginButton.disabled = false;
            loginButton.textContent = 'Login';
          }
        } catch (error) {
          console.error('Login error:', error);
          const errorEl = document.getElementById('loginError');
          errorEl.textContent = 'An error occurred. Please try again.';
          errorEl.classList.remove('hidden');
          loginButton.disabled = false;
          loginButton.textContent = 'Login';
        }
      });
    </script>
  </body>
</html>